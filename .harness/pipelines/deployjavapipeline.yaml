pipeline:
  projectIdentifier: revanthcstesting
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: deploy
        identifier: deploy
        description: ""
        type: Deployment
        spec:
          deploymentType: NativeHelm
          service:
            serviceRef: demojavaapp
            serviceInputs:
              serviceDefinition:
                type: NativeHelm
                spec:
                  manifests:
                    - manifest:
                        identifier: devsecopsdemo
                        type: HelmChart
                        spec:
                          chartVersion: <+input>
                  artifacts:
                    primary:
                      primaryArtifactRef: demojavaapp
                      sources:
                        - identifier: demojavaapp
                          type: DockerRegistry
                          spec:
                            tag: <+input>
          environment:
            environmentRef: rrgcpenv
            deployToAll: false
            infrastructureDefinitions:
              - identifier: k8senvnativegcp
          execution:
            steps:
              - step:
                  identifier: lockNamespace
                  name: Lock namespace
                  timeout: 1d
                  type: Queue
                  spec:
                    key: <+env.name>-<+infra.namespace>
                    scope: Pipeline
              - step:
                  type: ShellScript
                  name: ShellScript_1
                  identifier: ShellScript_1
                  spec:
                    shell: Bash
                    executionTarget: {}
                    source:
                      type: Inline
                      spec:
                        script: |-
                          echo "config1"
                          <+configFile.getAsString("jfrogconfig")>

                          echo "config2"
                          <+configFile.getAsString("config:.harness/pipelines/iamapply.yaml")>


                          echo "config3"
                          <+configFile.getAsString("filestoreconfig:/test/config1.txt")>

                          echo "config4"
                          <+configFile.getAsString("filestoreconfig:/test")>
                    environmentVariables: []
                    outputVariables: []
                  timeout: 10m
            rollbackSteps:
              - step:
                  name: Helm Rollback
                  identifier: helmRollback
                  type: HelmRollback
                  timeout: 10m
                  spec: {}
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
    - stage:
        name: security
        identifier: security
        description: ""
        type: SecurityTests
        spec:
          cloneCodebase: true
          caching:
            enabled: false
            override: false
            paths: []
          buildIntelligence:
            enabled: false
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - parallel:
                  - step:
                      type: SscaArtifactVerification
                      name: Artifact Verification_1
                      identifier: ArtifactVerification_1
                      spec:
                        source:
                          type: docker
                          spec:
                            connector: revanthdocker
                            image: <+pipeline.stages.deploy.spec.artifacts.primary.imagePath>:<+pipeline.stages.deploy.spec.artifacts.primary.tag>
                        verifySign:
                          type: cosign
                          spec:
                            public_key: artifact-pub
                  - step:
                      type: SlsaVerification
                      name: SlsaVerification_1
                      identifier: SlsaVerification_1
                      spec:
                        source:
                          type: Docker
                          spec:
                            connector: revanthdocker
                            image_path: <+pipeline.stages.deploy.spec.artifacts.primary.imagePath>:<+pipeline.stages.deploy.spec.artifacts.primary.tag>
                        verify_attestation:
                          type: cosign
                          spec:
                            public_key: artifact-pub
                  - step:
                      type: AquaTrivy
                      name: AquaTrivy_1
                      identifier: AquaTrivy_1
                      spec:
                        mode: orchestration
                        config: default
                        target:
                          type: container
                          detection: auto
                        advanced:
                          log:
                            level: info
                        privileged: true
                        image:
                          type: docker_v2
                          tag: <+pipeline.stages.deploy.spec.artifacts.primary.tag>
                          name: <+pipeline.stages.deploy.spec.artifacts.primary.imagePath>
                        sbom:
                          format: spdx-json
        when:
          pipelineStatus: Success
          condition: "false"
  properties:
    ci:
      codebase:
        connectorRef: account.revanthplayground
        build: <+input>
  identifier: deployjavapipeline
  name: deploy-java-pipeline
