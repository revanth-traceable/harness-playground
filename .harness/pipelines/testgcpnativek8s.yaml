pipeline:
  name: test-gcp-native-k8s
  identifier: testgcpnativek8s
  projectIdentifier: revanthcstesting
  orgIdentifier: default
  tags: {}
  stages:
    - parallel:
        - stage:
            name: helm deploy
            identifier: helm_deploy
            description: ""
            type: Deployment
            spec:
              deploymentType: NativeHelm
              service:
                serviceRef: sampleapp
              environment:
                environmentRef: rrgcpenv
                deployToAll: false
                infrastructureDefinitions:
                  - identifier: k8senvnativegcp
              execution:
                steps:
                  - step:
                      type: HelmDeploy
                      name: HelmDeploy_1
                      identifier: HelmDeploy_1
                      spec:
                        skipDryRun: false
                        ignoreReleaseHistFailStatus: false
                      timeout: 10m
                  - stepGroup:
                      name: test-group
                      identifier: testgroup
                      steps:
                        - step:
                            type: ShellScript
                            name: ShellScript_1
                            identifier: ShellScript_1
                            spec:
                              shell: Bash
                              executionTarget: {}
                              source:
                                type: Inline
                                spec:
                                  script: ls
                              environmentVariables: []
                              outputVariables: []
                            timeout: 10m
                      stepGroupInfra:
                        type: KubernetesDirect
                        spec:
                          connectorRef: directgcpk8s
                          namespace: harness_delegate_ng
                          volumes:
                            - mountPath: /harness/config
                              type: ConfigMap
                              spec:
                                name: myconfig
                rollbackSteps: []
            tags: {}
            failureStrategies:
              - onFailure:
                  errors:
                    - AllErrors
                  action:
                    type: StageRollback
        - stage:
            name: custom
            identifier: custom
            description: ""
            type: Custom
            spec:
              execution:
                steps:
                  - step:
                      type: ShellScript
                      name: ShellScript_1
                      identifier: ShellScript_1
                      spec:
                        shell: Bash
                        executionTarget: {}
                        source:
                          type: Inline
                          spec:
                            script: ls
                        environmentVariables: []
                        outputVariables: []
                      timeout: 10m
            tags: {}
