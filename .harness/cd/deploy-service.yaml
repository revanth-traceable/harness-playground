pipeline:
  name: deploy-service
  identifier: deployservice
  projectIdentifier: revanthcstesting
  orgIdentifier: default
  tags: {}
  stages:
    - stage:
        name: deploy
        identifier: deploy
        description: ""
        type: Deployment
        spec:
          deploymentType: NativeHelm
          service:
            serviceRef: <+input>
            serviceInputs: <+input>
          environment:
            environmentRef: <+input>
            deployToAll: false
            environmentInputs: <+input>
            serviceOverrideInputs: <+input>
            infrastructureDefinitions: <+input>
          execution:
            steps:
              - step:
                  identifier: lockNamespace
                  name: Lock namespace
                  timeout: 1d
                  type: Queue
                  spec:
                    key: <+env.name>-<+infra.namespace>
                    scope: Pipeline
              - step:
                  name: Helm Deployment
                  identifier: helmDeployment
                  type: HelmDeploy
                  timeout: 10m
                  spec:
                    skipDryRun: false
            rollbackSteps:
              - step:
                  name: Helm Rollback
                  identifier: helmRollback
                  type: HelmRollback
                  timeout: 10m
                  spec: {}
        tags: {}
        failureStrategies:
          - onFailure:
              errors:
                - AllErrors
              action:
                type: StageRollback
    - stage:
        name: security
        identifier: security
        description: ""
        type: SecurityTests
        spec:
          cloneCodebase: true
          caching:
            enabled: false
            override: false
            paths: []
          buildIntelligence:
            enabled: false
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - parallel:
                  - step:
                      type: SscaArtifactVerification
                      name: Artifact Verification_1
                      identifier: ArtifactVerification_1
                      spec:
                        source:
                          type: docker
                          spec:
                            connector: revanthdocker
                            image: <+pipeline.stages.deploy.spec.artifacts.primary.imagePath>:<+pipeline.stages.deploy.spec.artifacts.primary.tag>
                        verifySign:
                          type: cosign
                          spec:
                            public_key: artifact-pub
                  - step:
                      type: SlsaVerification
                      name: SlsaVerification_1
                      identifier: SlsaVerification_1
                      spec:
                        source:
                          type: Docker
                          spec:
                            connector: revanthdocker
                            image_path: <+pipeline.stages.deploy.spec.artifacts.primary.imagePath>:<+pipeline.stages.deploy.spec.artifacts.primary.tag>
                        verify_attestation:
                          type: cosign
                          spec:
                            public_key: artifact-pub
                  - step:
                      type: AquaTrivy
                      name: AquaTrivy_1
                      identifier: AquaTrivy_1
                      spec:
                        mode: orchestration
                        config: default
                        target:
                          type: container
                          detection: auto
                        advanced:
                          log:
                            level: info
                        privileged: true
                        image:
                          type: docker_v2
                          tag: <+pipeline.stages.deploy.spec.artifacts.primary.tag>
                          name: <+pipeline.stages.deploy.spec.artifacts.primary.imagePath>
                        sbom:
                          format: spdx-json
  properties:
    ci:
      codebase:
        connectorRef: account.revanthplayground
        build: <+input>
