service:
  name: demo-java-app
  identifier: demojavaapp
  orgIdentifier: default
  projectIdentifier: revanthcstesting
  serviceDefinition:
    spec:
      manifests:
        - manifest:
            identifier: devsecopsdemo
            type: HelmChart
            spec:
              store:
                type: OciHelmChart
                spec:
                  config:
                    type: Generic
                    spec:
                      connectorRef: harhelmconnector
                  basePath: sl32ke39qekmavwtgmagow/har-helm-repo
              chartName: demo-java-app
              subChartPath: ""
              chartVersion: <+input>
              helmVersion: V380
              skipResourceVersioning: false
              enableDeclarativeRollback: false
              fetchHelmChartMetadata: true
              valuesPaths:
                - values.yaml
                - values-prod.yaml
      variables:
        - name: releaseName
          type: String
          description: ""
          required: false
          value: demo-java-app
      artifacts:
        primary:
          primaryArtifactRef: <+input>
          sources:
            - spec:
                connectorRef: revanthdocker
                imagePath: revanthharness/demo-java-app
                tag: <+input>
                digest: ""
              identifier: demojavaapp
              type: DockerRegistry
      configFiles:
        - configFile:
            identifier: config
            spec:
              store:
                type: Github
                spec:
                  connectorRef: rriacmrepo
                  gitFetchType: Branch
                  paths:
                    - iampolicy.json
                  branch: main
      hooks:
        - preHook:
            identifier: prehook
            storeType: Inline
            actions:
              - FetchFiles
            store:
              content: |-
                chart_name="<+manifests.devsecopsdemo.helm.name>"
                ouput_file="../../${chart_name}/files/config.properties"

                cat << 'EOF' > config.properties
                <+configFile.getAsString("config")>
                EOF

                # Then use the file
                cat config.properties

                cp config.properties files/config.properties
    type: NativeHelm
