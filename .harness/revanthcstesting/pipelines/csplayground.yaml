pipeline:
  name: cs-playground
  identifier: csplayground
  projectIdentifier: revanthcstesting
  orgIdentifier: default
  tags: {}
  properties:
    ci:
      codebase:
        connectorRef: account.revanthplayground
        build: <+input>
  stages:
    - stage:
        name: export
        identifier: export
        description: ""
        type: Custom
        spec:
          execution:
            steps:
              - step:
                  type: ShellScript
                  name: ShellScript_1
                  identifier: ShellScript_1
                  spec:
                    shell: Bash
                    executionTarget: {}
                    source:
                      type: Inline
                      spec:
                        script: |
                          export commitsha=$(git rev-parse --short=8 HEAD)

                          TRIGGER_TYPE="<+pipeline.triggerType>"

                          echo "TRIGGER_TYPE"

                          if [[ "$TRIGGER_TYPE" == "MANUAL" ]]; then
                            result=${commitsha}
                          else
                            result="dev"
                          fi  
                    environmentVariables: []
                    outputVariables:
                      - name: commitsha
                        type: String
                        value: result
                    outputAlias:
                      scope: Pipeline
                      key: export
                  timeout: 10m
          environment:
            environmentRef: local
            gitBranch: main
            deployToAll: false
            infrastructureDefinitions:
              - identifier: default
        tags: {}
        when:
          pipelineStatus: Success
          condition: (<+pipeline.triggerType> == "SKIP")
    - stage:
        name: gobuild
        identifier: gobuild
        description: ""
        type: CI
        spec:
          cloneCodebase: true
          caching:
            enabled: false
            override: true
            paths: []
          buildIntelligence:
            enabled: false
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Run
                  name: bash
                  identifier: bash
                  spec:
                    shell: Bash
                    command: |-
                      export commitsha=$(git rev-parse --short=8 HEAD)

                      TRIGGER_TYPE=<+pipeline.triggerType>

                      echo "${TRIGGER_TYPE}"

                      if [[ "$TRIGGER_TYPE" == "MANUAL" ]]; then
                        result=${commitsha}
                      else
                        result="dev"
                      fi
                    outputVariables:
                      - name: commitsha
                        type: String
                        value: result
                  when:
                    stageStatus: Success
                    condition: (<+pipeline.triggerType> == "MANUAL")
              - step:
                  type: BuildAndPushDockerRegistry
                  name: BuildAndPushDockerRegistry_1
                  identifier: BuildAndPushDockerRegistry_1
                  spec:
                    connectorRef: revanthdocker
                    repo: revanthharness/hello-world-go-ci
                    tags:
                      - <+<+pipeline.stages.gobuild.spec.execution.steps.bash.output.outputVariables.commitsha>.substring(0,7)>
                    caching: true
                    dockerfile: hello-world/Dockerfile
              - step:
                  type: Grype
                  name: localscan
                  identifier: localscan
                  spec:
                    mode: orchestration
                    config: default
                    target:
                      type: container
                      detection: auto
                    advanced:
                      log:
                        level: info
                    privileged: true
                    image:
                      type: local_image
                      tag: <+pipeline.stages.gobuild.spec.execution.steps.BuildAndPushDockerRegistry_1.artifact_BuildAndPushDockerRegistry_1.stepArtifacts.publishedImageArtifacts[0].tag>
                      name: revanthharness/hello-world-go-ci
    - stage:
        name: scan image
        identifier: scan_image
        description: ""
        type: SecurityTests
        spec:
          cloneCodebase: true
          caching:
            enabled: true
            override: true
          buildIntelligence:
            enabled: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: SscaOrchestration
                  name: SBOM Orchestration_1
                  identifier: SBOMOrchestration_1
                  spec:
                    mode: generation
                    tool:
                      type: Syft
                      spec:
                        format: spdx-json
                    source:
                      type: docker
                      spec:
                        connector: revanthdocker
                        image: revanthharness/hello-world-go-ci:<+pipeline.stages.gobuild.spec.execution.steps.BuildAndPushDockerRegistry_1.artifact_BuildAndPushDockerRegistry_1.stepArtifacts.publishedImageArtifacts[0].tag>
                    attestation:
                      type: cosign
                      spec:
                        privateKey: artifact-signing-pub
                        password: reavnth-artifact-signing
                    sbom_drift:
                      base: last_generated_sbom
                    resources:
                      limits:
                        memory: 500Mi
                        cpu: "0.5"
              - step:
                  type: AquaTrivy
                  name: AquaTrivy_1
                  identifier: AquaTrivy_1
                  spec:
                    mode: orchestration
                    config: default
                    target:
                      type: container
                      detection: auto
                    advanced:
                      log:
                        level: info
                    privileged: true
                    connectorRef: revanthdocker
                    image:
                      type: docker_v2
                      tag: <+pipeline.stages.gobuild.spec.execution.steps.BuildAndPushDockerRegistry_1.artifact_BuildAndPushDockerRegistry_1.stepArtifacts.publishedImageArtifacts[0].tag>
                      name: revanthharness/hello-world-go-ci
                    sbom:
                      generate: false
                      format: spdx-json
              - step:
                  type: SscaArtifactSigning
                  name: Artifact Signing_1
                  identifier: ArtifactSigning_1
                  spec:
                    source:
                      type: docker
                      spec:
                        connector: revanthdocker
                        image: revanthharness/hello-world-go-ci:<+trigger.commitSha>
                    signing:
                      type: cosign
                      spec:
                        private_key: artifact-signing-pub
                        password: reavnth-artifact-signing
                    uploadSignature:
                      upload: true
              - step:
                  type: SscaArtifactVerification
                  name: Artifact Verification_1
                  identifier: ArtifactVerification_1
                  spec:
                    source:
                      type: docker
                      spec:
                        connector: revanthdocker
                        image: revanthharness/hello-world-go-ci:<+trigger.commitSha>
                    verifySign:
                      type: cosign
                      spec:
                        public_key: artifact-pub
              - step:
                  type: SscaEnforcement
                  name: SBOM Policy Enforcement_1
                  identifier: SBOMPolicyEnforcement_1
                  spec:
                    source:
                      type: docker
                      spec:
                        connector: revanthdocker
                        image: revanthharness/hello-world-go-ci:<+trigger.commitSha>
                    verifyAttestation:
                      type: cosign
                      spec:
                        publicKey: artifact-pub
                    policy:
                      policySets:
                        - policy_set_sbom_allow_and_deny_list_04_30_16_48
                    resources:
                      limits:
                        memory: 500Mi
                        cpu: "0.5"
    - stage:
        name: scanning code
        identifier: scanning_cide
        description: ""
        type: SecurityTests
        spec:
          cloneCodebase: true
          caching:
            enabled: true
            override: true
            paths: []
          buildIntelligence:
            enabled: true
          platform:
            os: Linux
            arch: Amd64
          runtime:
            type: Cloud
            spec: {}
          execution:
            steps:
              - step:
                  type: Semgrep
                  name: Semgrep_1
                  identifier: Semgrep_1
                  spec:
                    mode: orchestration
                    config: default
                    target:
                      type: repository
                      detection: auto
                    advanced:
                      log:
                        level: info
  variables:
    - name: shortcommitsha
      type: String
      description: ""
      required: false
      value: <+<+trigger.commitSha>.substring(0,7)>
  allowStageExecutions: true
